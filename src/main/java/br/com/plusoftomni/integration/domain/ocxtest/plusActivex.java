// File: plusActivex.java
// Generated: Fri Feb 12 13:58:18 2016

// This Java source file has been automatically
// generated by EZ-JCom.

package br.com.plusoftomni.integration.domain.ocxtest;

public class plusActivex extends ezjcom.JComActiveXObject {

	// Available COM interface objects.
	//

	/** Retrieve the COM Interface "_plusActivex" */
	public _plusActivex get_plusActivex() throws ezjcom.JComException {
		if ( _intf_plusActivex == null ) throw new ezjcom.JComException( "Interface not supported by COM object.  Check for version mismatch.  If version is OK, on \"Advanced\" page select \"Object Creation\"" );
		return _intf_plusActivex;
	}


	/** Add event listener "__plusActivex" */
	public void addJComEventListener( __plusActivex listener ) throws ezjcom.JComException { _JComAddEventListener( listener ); }

	/** Remove event listener "__plusActivex" */
	public void removeJComEventListener( __plusActivex listener ) throws ezjcom.JComException { _JComRemoveEventListener( listener ); }



	// Constructor(s)
	/** Default ActiveX object constructor.  <B>WARNING: This object is described as <I>non-creatable</I>, construction may not succeed</b>. */
	public plusActivex() throws ezjcom.JComException
	{
		this( false, false );
	}

	/** Alternate constructor.
	  * Try to find existing ActiveX object, or create using Server-only options.
	  * <P>Finding existing objects is not supported by many COM/ActiveX objects,
	  *  but EZ-JCom includes support for those COM/ActiveX objects that can be found.
	  *  <P>Creating using server-only options (first argument must be false) is useful
	  *  for some MS Office products.

	  * <B>WARNING: This object is described as <I>non-creatable</I>, construction may not succeed</b>.
	  */
	public plusActivex( boolean find, boolean createAsServer ) throws ezjcom.JComException
	{
		if ( ! __JComCreateObject( find, createAsServer ))
			throw new ezjcom.JComException( "Object creation failed for COM object \"plusActivex\"" );
		__JComInitialize();
	}

	private native Object __JComNewObj( Class cls );

	/** Initializer.  Used internally by EZ JCom. */
	private void __JComInitialize() throws ezjcom.JComException
	{
		_intf_plusActivex = (_plusActivex) __JComNewObj( _plusActivex.class );
		if ( ! _intf_plusActivex.__JComLoad( this, true ))
			_intf_plusActivex = null;
	}

	// Constuctor for internal EZ JCom Usage only
	private plusActivex( java.lang.ref.Reference ref ) {}

	/** Set container for this activeX object. */
	public void setActiveXContainer( ezjcom.JComActiveXContainer ezjActiveXContainer) throws ezjcom.JComException
	{
		ezjActiveXContainer.setActiveX( this );
	}

	/* JNI function used internally by EZ-JCom */
	private native boolean __JComCreateObject( boolean find, boolean createAsServer ) throws ezjcom.JComException;
	private static native String __JComGetGUID();
	private native Object[] __RemoteEventAdd( String interfaceStr );

	_plusActivex _intf_plusActivex;

	static {
		System.loadLibrary( "JplusActivexProj" );
	}

}
